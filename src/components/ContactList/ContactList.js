import PropTypes from 'prop-types';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faTrashAlt } from '@fortawesome/free-solid-svg-icons';
import Filter from './Filter';
import s from './ContactList.module.css';

const element = <FontAwesomeIcon icon={faTrashAlt} />;
<Filter />;

// const Filter = ({ value, onChangeFilter }) => {
//   return (
//     <div className={s.filter}>
//       <label>
//         Find contacts by name
//         <input
//           type="text"
//           value={value}
//           onChange={e => onChangeFilter(e.target.value)}
//         />
//       </label>
//     </div>

//   );
// };
// –≠—Ç–æ—Ç –∫–æ–¥ –æ–ø–∏—Å—ã–≤–∞–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç ContactList, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ contacts, –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ filter, —Ñ—É–Ω–∫—Ü–∏—é onChangeFilter –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ —Ñ—É–Ω–∫—Ü–∏—é onDeleteContact –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞. –í–æ—Ç –µ–≥–æ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞:

// –° –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ map() –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤ contacts –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç—Å—è –≤ –º–∞—Å—Å–∏–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ <li>. –ö–∞–∂–¥—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–æ–ª—É—á–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π key –ø–æ —Å–≤–æ–π—Å—Ç–≤—É id.
// –ö–∞–∂–¥—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç <li> —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–º—è –∏ –Ω–æ–º–µ—Ä –∫–æ–Ω—Ç–∞–∫—Ç–∞, –∞ —Ç–∞–∫–∂–µ –∫–Ω–æ–ø–∫—É "—É–¥–∞–ª–∏—Ç—å", –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è onDeleteContact —Å –ø–µ—Ä–µ–¥–∞—á–µ–π –≤ –Ω–µ–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞.
// –ò–∫–æ–Ω–∫–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "—É–¥–∞–ª–∏—Ç—å" –ø–æ–ª—É—á–∞–µ—Ç—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π element.
// –ü–æ–ª—É—á–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ <li> —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é contactList.
// –í —Ü–µ–ª–æ–º —ç—Ç–æ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ñ–∏–ª—å—Ç—Ä–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤.üëá
const ContactList = ({ contacts, filter, onChangeFilter, onDeleteContact }) => {
  const contactList = contacts.map(({ id, name, number }) => {
    return (
      <li key={id}>
        {name}: {number}
        <button
          className={s.btn}
          type="button"
          onClick={() => onDeleteContact(id)}
          title="delete"
        >
          {element}
        </button>
      </li>
    );
  });

  //–≠—Ç–æ—Ç –∫–æ–¥ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ ContactList. –í–æ—Ç –µ–≥–æ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞:

  //–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ <div>, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –µ—Å—Ç—å –∫–ª–∞—Å—Å s.contacts.
  //–í—ã—Ä–∞–∂–µ–Ω–∏–µ !!contacts.length –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –≤ –º–∞—Å—Å–∏–≤–µ contacts —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∫–æ–Ω—Ç–∞–∫—Ç. –ï—Å–ª–∏ –µ—Å—Ç—å, —Ç–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Filter, –∫–æ—Ç–æ—Ä–æ–º—É –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è —Å–≤–æ–π—Å—Ç–≤–∞ value –∏ onChangeFilter.
  //–ï—Å–ª–∏ –≤ –º–∞—Å—Å–∏–≤–µ contacts –Ω–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤, —Ç–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ filter, –∞ —Ç–∞–∫–∂–µ –∫–Ω–æ–ø–∫–∞, –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è onChangeFilter —Å –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞.
  //–ú–∞—Å—Å–∏–≤ contactList –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç—Å—è, –∞ –∑–∞—Ç–µ–º —Å–æ–∑–¥–∞–µ—Ç—Å—è –º–∞—Å—Å–∏–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ <ContactListItem> —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ map(). –≠—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∑–∞—Ç–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ <ul>.
  //–í —Ü–µ–ª–æ–º —ç—Ç–æ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤, –∞ —Ç–∞–∫–∂–µ –∑–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.üëá*/

  return (
    <div className={s.contacts}>
      {!!contacts.length ? (
        <Filter value={filter} onChangeFilter={onChangeFilter} />
      ) : (
        <div>
          <p>–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö "{filter}" –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤</p>
          <button type="button" onClick={() => onChangeFilter('')}>
            –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É
          </button>
        </div>
      )}
      <ul>{contactList.reverse()}</ul>
    </div>
  );
};

ContactList.propTypes = {
  contacts: PropTypes.arrayOf(
    PropTypes.exact({
      id: PropTypes.string.isRequired,
      name: PropTypes.number.isRequired,
      number: PropTypes.number.isRequired,
    })
  ),
  filter: PropTypes.number.isRequired,
  onChangeFilter: PropTypes.string.isRequired,
  onDeleteContact: PropTypes.string.isRequired,
};

export default ContactList;
