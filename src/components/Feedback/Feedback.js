import React, { Component } from 'react';
import Layout from '../Layout/Layout';
import Section from '../Section/Section';

import CardInterface from './CardInterface/CardInterface';
import FeedbackOptions from './FeedbackOptions/FeedbackOptions';
import Statistics from './Statistics/Statistics';
import Notification from './Notification/Notification';

import './Feedback.css';

export class Feedback extends Component {
  state = {
    good: 0,
    neutral: 0,
    bad: 0,
  };

  componentDidMount() {
    const good = localStorage.getItem('good');
    const neutral = localStorage.getItem('neutral');
    const bad = localStorage.getItem('bad');
    const parseGood = JSON.parse(good);
    const parseNeutral = JSON.parse(neutral);
    const parseBad = JSON.parse(bad);
    if (parseGood && parseNeutral && parseBad) {
      this.setState({
        good: parseGood,
        neutral: parseNeutral,
        bad: parseBad,
      });
    }
  }

  componentDidUpdate(prevProps, prevState) {
    const { good, neutral, bad } = this.state;
    if (good !== prevState.good) {
      localStorage.setItem('good', JSON.stringify(good));
    }
    if (neutral !== prevState.neutral) {
      localStorage.setItem('neutral', JSON.stringify(neutral));
    }
    if (bad !== prevState.bad) {
      localStorage.setItem('bad', JSON.stringify(bad));
    }
  }

  clickHandler = event => {
    const { name } = event.target; //–ø–æ–ª—É—á–∞–µ–º target (—Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π name)—Å—Ç—Ä–æ–∏–∫ ‚Ññ44  <FeedbackOptions onLeaveFeedback={this.clickHandler} />
    //–¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è const { target } = event;
    this.setState(state => ({ [name]: state[name] + 1 }));
    //this.setState-–º–µ—Ç–æ–¥ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ —Å–æ—Å—Ç–∞—è–Ω–∏—è
    //[name]-—Ç–æ —á—Ç–æ –º—ã—Ö–æ—Ç–∏–º –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å
    //state[name] + 1 —ç—Ç–æ —Ç–æ —á—Ç–æ –º—ã —Ö–∞—Ç–∏–º –∑–∞–ø–∏—Å–∞—Ç—å
  };

  countTotalFeedback = () => {
    return Object.values(this.state).reduce((acc, item) => {
      //Object.keys(obj) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∫–ª—é—á–µ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤ –æ–±—å–µ–∫—Ç–∞
      return acc + item; //—Å—É–º–º–∞ –≤—Å–µ—Ö —Ñ–∏–¥–±–µ–∫–æ–≤
    });
  };

  countPositiveFeedbackPercentage = () => {
    return Math.round((this.state.good / this.countTotalFeedback()) * 100); // Math.round(num) - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —á–∏—Å–ª–∞ –æ–∫—Ä—É–≥–ª—ë–Ω–Ω–æ–µ –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ —Ü–µ–ª–æ–≥–æ (—Å–æ—Å—Ç–æ—è–Ω–∏—è good –¥–µ–ª–∏—Ç –Ω–∞ countTotalFeedback –∏ —É–º–º–Ω–∞–∂–∞–µ—Ç –Ω–∞ 100) countTotalFeedback –∏ —É–º–º–Ω–∞–∂–∞–µ—Ç –Ω–∞ 100
  }; //–ø–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç —Ö–æ—Ä–æ—à–∏—Ö –æ–¥–∑–∏–≤–æ–≤

  //–º–µ—Ç–æ–¥ –∑–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–∞—è–Ω–∏–π –Ω–∞ 0üëá

  resetState = () => {
    this.setState({
      good: 0,
      neutral: 0,
      bad: 0,
    });
  };

  render() {
    const { good, neutral, bad } = this.state;

    const total = this.countTotalFeedback();
    const positivePercentage = this.countPositiveFeedbackPercentage();
    return (
      <Layout>
        <h1>Home Work #2.2</h1>
        <Section title="Phonebook"></Section>
        <CardInterface>
          <Section title="Please leave feedback">
            <FeedbackOptions onLeaveFeedback={this.clickHandler} />
          </Section>
          <Section title="Statistics">
            {total ? (
              <Statistics
                good={good}
                neutral={neutral}
                bad={bad}
                total={total}
                positivePercentage={positivePercentage}
              />
            ) : (
              <Notification message="No feedback given" />
            )}
          </Section>
          <button type="button" onClick={this.resetState}>
            Reset
          </button>
        </CardInterface>
      </Layout>
    );
  }
}

export default Feedback;
